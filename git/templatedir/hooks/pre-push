#!/usr/bin/env ruby


class PrePushHandler

    def handle
        if forced_push_no_branch?
            reject "ALL BRANCHES"
        elsif (forced_push? && pushing_to?('master'))
            reject current_branch.upcase
        end
    end

    private

    def pushing_to? branch
        current_branch == branch
    end

    def current_branch
        result = %x{git branch}.split("\n")
        if result.empty?
            feedback "It seems your app is not a git repository."
        else
            result.select { |b| b =~ /^\*/ }.first.split(" ").last.strip
        end
    end

    def reject branch
        messages = ["Your attempt to FORCE PUSH to #{branch} has been rejected."]
        messages << "If you still want to FORCE PUSH then you need to ignore the pre_push git hook by executing following command."
        messages << "git push master --force --no-verify"
        feedback messages
    end

    def push_command
        ppid = Process.ppid
        cmd = "ps -ocommand= -p #{ppid}"
        return `#{cmd}`
    end

    def forced_push?
        output = push_command
        output.match(/--force|-f/)
    end

    def forced_push_no_branch?
        output = push_command
        output.match(/git push \S*\s*(-f|--force)/)
    end

    def feedback messages
        puts "*"*110
        [messages].flatten.each do |message|
            puts message
        end
        puts "*"*110

        exit 1
    end
end

PrePushHandler.new.handle
